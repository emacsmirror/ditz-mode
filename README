=========================
 Ditz mode for GNU Emacs
=========================

About Ditz and Ditz mode
========================

Ditz_ is a distributed issue tracking system, written in Ruby by William
Morgan, and designed for use with distributed version control systems such
as Mercurial_.  Ditz mode is an editing mode for GNU Emacs_, allowing Ditz
commands to be run directly inside an Emacs buffer.  You can find the
latest version of Ditz mode at Bitbucket_.

Ditz mode is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free
Software Foundation, either version 3 of the License, or (at your option)
any later version.  See the file ``COPYING`` for details.

Getting Started
===============

Setting up Ditz mode
--------------------

Put ``ditz-mode.el`` in your lisp load path and something like the
following in your ``.emacs``::

    (require 'ditz-mode)
    (define-key global-map "\C-c\C-d" ditz-prefix)

Setting up Ditz
---------------

At the moment, Ditz mode doesn't do the initial setup of Ditz.  You must
run ``ditz init`` yourself to produce a ``.ditz-config`` file.  Ditz mode
searches for this file, and reads it to get the name of the issue
directory.  It looks first in the current directory, and then in parent
directories.  Then it looks for the issue directory, first in the current
directory, and then in the directory where it found ``.ditz-config``.

Using Ditz mode
---------------

Once things are set up, you can use ``C-c C-d`` (or whatever prefix you
chose) followed by ``C-h`` to get a list of valid commands.

Other contributed stuff
=======================

The ``contrib`` directory contains other Ditz-related files you may be
interested in:

``ditz-tag.patch``
    A patch for Ditz which adds indicators to each issue, showing whether
    it's a feature or a bug.  Ditz mode highlights these specially, if
    they're found.

``hg.rb``
    A Ditz hook to automatically update Mercurial_ status when issues are
    added or removed.  It can easily be customized to support other DVCSes.

Credits
=======

Thanks to Kentaro Kuribayashi <kentarok@gmail.com>, author of the original_
Ditz mode.  This is an almost (but not quite) complete rewrite.

.. _Ditz: http://ditz.rubyforge.org
.. _Emacs: http://www.gnu.org/emacs
.. _Mercurial: http://mercurial.selenic.com
.. _Bitbucket: http://bitbucket.org/zondo/ditz-mode
.. _original: http://github.com/kentaro/emacs-ditz/tree/master

.. Local Variables:
.. mode: rst
.. End:
